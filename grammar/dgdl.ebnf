Game            ::= game:{id:ID, Composition [,Regulation]* [,Interaction]+}
Composition     ::= {Turns, Participants [,Player]+ [,Store]* [,RoleList]?}
Turns           ::= turns:{magnitude:Magnitude, ordering:Ordering[, max:Number]?}
Magnitude       ::= single | multiple
Ordering        ::= strict | liberal
Participants    ::= players:{min:Number, max:Number|undefined}
Player          ::= player:{id:ID [, roleList]? }
Store           ::= store:{id:ID, owner:{ID[, ID]*}, structure:Structure, visibility:Visibility}
Structure       ::= set | queue | stack
Visibility      ::= public | private
RoleList        ::= roles:{ID[, ID]*}
Regulation      ::= rule:{id:ID, scope:Scope, RuleExpr}
Scope           ::= initial | turnwise | movewise
Interaction     ::= move:{id:ID, content:{Content}, RuleExpr}
Content         ::= {[!]?ID[, [!]?ID]*}
RuleExpr        ::= body:{Effects | Rule [, Rule]*}
Rule            ::= if Condition [and Condition]* then Effects
Effects         ::= Effect[ and Effect]*
Effect          ::= ID{Param[, Param]*}
Condition       ::= ID{Param[, Param]*}
ID              ::= UChar|LChar[UChar|LChar|Num|Link]*
Param           ::= ID | Content
Num             ::= [0-9]+
UChar           ::= [A-Z]+
LChar           ::= [a-z]+
Link            ::= '_'
