grammar dgdl_v3 ;
game: GAME COLON LBRA ID COLON identifier COMMA composition (COMMA regulations)* (COMMA interactions)+ RBRA EOF;
identifier: UCHAR(UCHAR|LCHAR|NUM|LINK)*;
composition: COMPOSITION COLON LBRA turns COMMA participants (COMMA player)+ (COMMA store)* (COMMA rolelist)? RBRA;
turns: TURNS COLON LBRA MAGNITUDE COLON magnitude COMMA ORDERING COLON ordering (COMMA MAX COLON NUM)? RBRA;
participants: PLAYERS COLON LBRA MIN COLON NUM COMMA MAX COLON (NUM | UNDEFINED) RBRA;
player: PLAYER COLON LBRA ID COLON identifier (COMMA rolelist)? RBRA;
rolelist: ROLES COLON LBRA identifier (COMMA identifier)* RBRA;
store: STORE COLON LBRA ID COLON identifier COMMA OWNER COLON LBRA identifier (COMMA identifier)* RBRA COMMA STRUCTURE COLON structure COMMA VISIBILITY COLON visibility RBRA;
regulations: RULES COLON LBRA regulation (COMMA regulation)* RBRA;
regulation: RULE COLON LBRA ID COLON identifier COMMA SCOPE COLON scope COMMA ruleExpr RBRA;
ruleExpr: BODY COLON LBRA (effects|rle (COMMA rle)*) RBRA;
rle: IF condition (AND condition)* THEN effects;
effects: effect (AND effect)*;
effect: identifier LBRA param (COMMA param)* RBRA;
condition: identifier LBRA param (COMMA param)* RBRA;
param: identifier | content;
content: LBRA (NEG)? identifier (COMMA (NEG)? identifier)* RBRA;
interactions: MOVES COLON LBRA interaction (COMMA interaction)* RBRA;
interaction: MOVE COLON LBRA ID COLON identifier COMMA CONTENT COLON content COMMA ruleExpr RBRA;

magnitude: SINGLE | MULTIPLE;
ordering: STRICT | LIBERAL;
structure: SET | QUEUE | STACK;
visibility: PUBLIC | PRIVATE;
scope: INITIAL | TURNWISE | MOVEWISE;

AND:    'and';
BODY:   'body';
COMPOSITION: 'composition';
CONTENT: 'content';
ELSE:   'else';
GAME: 'game';
ID: 'id';
IF: 'if';
INITIAL: 'initial';
LIBERAL: 'liberal';
MAGNITUDE: 'magnitude';
MAX:    'max';
MIN:    'min';
MOVE: 'move';
MOVES: 'moves';
MOVEWISE: 'movewise';
MULTIPLE: 'multiple';
NEG:    '!';
ORDERING: 'ordering';
OWNER: 'owner';
PLAYERS: 'players';
PLAYER: 'player';
PRIVATE: 'private';
PUBLIC: 'public';
QUEUE: 'queue';
ROLES: 'roles';
RULE: 'rule';
RULES: 'rules';
SCOPE: 'scope';
SET: 'set';
SINGLE: 'single';
STACK: 'stack';
STORE: 'store';
STRICT: 'strict';
STRUCTURE: 'structure';
SYSTEM: 'system';
TURNS: 'turns';
TURNWISE: 'turnwise';
THEN:   'then';
UNDEFINED:  'undefined';
VISIBILITY: 'visibility';
COLON   : ':';
COMMA   : ',';
LBRA    : '{' ;
RBRA    : '}' ;
LINK:   '_';

NUM:    [0-9]+;
UCHAR:  [A-Z]+;
LCHAR:  [a-z]+;       
WS:     [ \t\r\n]+ -> skip; 
